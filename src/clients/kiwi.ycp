/* ------------------------------------------------------------------------------
 * Copyright (c) 2006-2012 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:	clients/kiwi.ycp
 * Package:	Configuration of product-creator
 * Summary:	Client to start the kiwi UI
 * Authors:	Jiri Suchomel <jsuchome@suse.cz>
 *
 * $Id$
 *
 */

{

textdomain "product-creator";

include "product-creator/kiwi_dialogs.ycp";
include "product-creator/wizards.ycp";

import "CommandLine";
import "Confirm";
import "PackageCallbacks";
import "Sequencer";

/**
 * configuration workflow for kiwi
 * @return sequence result
 */
define boolean ShortKiwiSequence() {

    map aliases = $[
	"prepare"	: ``( PrepareDialog() ),
	"kiwi"		: ``( KiwiDialog () ),
    ];
    map sequence = $[
	"ws_start" : "prepare",
	"prepare" : $[
	    `abort	: `abort,
	    `next	: "kiwi"
	],
	"kiwi" : $[
	    `abort	: `abort,
	    `next	: `next
	]
    ];

    Wizard::CreateDialog();
    Wizard::SetDesktopTitleAndIcon("kiwi");

    if (!Confirm::MustBeRoot ())
    {
	UI::CloseDialog ();
	return false;
    }

    // not necessary to install all kiwi-descs, but now we don't know
    // which will be needed...
    if (!Package::InstallAll (["kiwi", "kiwi-desc-isoboot", "kiwi-desc-xenboot", "kiwi-desc-usbboot", "kiwi-desc-vmxboot", "squashfs"]))
    {
	// error popup
        Popup::Error(_("Installation of required packages
failed."));
        return false;
    }

    InitRepositories ();
    PackageCallbacks::InitPackageCallbacks();

    symbol ret = Sequencer::Run(aliases, sequence);
    UI::CloseDialog();
    return ret == `next;
}

map cmdline_description = $[
    "id"	: "kiwi",
    // command line help text for the kiwi module
    "help"	: _("Configuration of Kiwi"),
    "guihandler"        : ShortKiwiSequence,
    "actions"           : $[],
];

y2milestone ("----------------------------------------");
y2milestone ("ProductCreator-kiwi module started");


any ret = CommandLine::Run(cmdline_description);

y2milestone("ProductCreator-kiwi module finished with %1", ret);
y2milestone("----------------------------------------");

return ret;

}
