/* ------------------------------------------------------------------------------
 * Copyright (c) 2006-2012 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * $Id$
 *
 */

{

textdomain "product-creator";

import "CommandLine";
import "Confirm";
import "FileUtils";
import "Kiwi";
import "Label";
import "ProductCreator";
import "Sequencer";
import "Wizard";
include "product-creator/wizards.ycp";



// TODO merge with main product-creator sequence?
define boolean ICSequence() {

    Wizard::CreateDialog();
    Wizard::SetDesktopTitleAndIcon("product-creator");

    if (!Confirm::MustBeRoot ())
    {
	UI::CloseDialog ();
	return false;
    }

    if (!Package::InstallAll (["kiwi", "squashfs"]))
    {
	// error popup
        Popup::Error(_("Installation of required packages
failed."));
	UI::CloseDialog ();
        return false;
    }

    symbol ret = ImageCreatorSequence ();

    UI::CloseDialog();
    return ret == `next;
}

map cmdline_description = $[
    "id"	: "image-creator",
    // transltors: command line help text for the Xproduct-creator module
    "help"	: _("Configuration of Image Creator"),
    "guihandler"        : ICSequence,
];


/* start the module */
any ret = CommandLine::Run(cmdline_description);
y2debug("ret=%1", ret);

return ret;

/* EOF */
}
